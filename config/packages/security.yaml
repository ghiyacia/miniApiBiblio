security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        APP\Entity\Adherent:
            algorithm: bcrypt
    # providers:
    #     in_db:
    #         entity:
    #             class: 'App\Entity\Adherent'
    #             property: 'mail'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # login:
            # pattern: ^/app
            # stateless: true
            # anonymous: true
            # json_login:
            #     username_path: mail
            #     # password_path: password
            #     check_path: /app/login
            #     success_handler: lexik_jwt_authentication.handler.authentication_success
            #     failure_handler: lexik_jwt_authentication.handler.authentication_failure
            # guard:
            #     authenticators: 
            #         - lexik_jwt_authentication.jwt_token_authenticator

            # anonymous: lazy
            # provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #  - { path: ^/app/login, roles: IS_AUTHENTICATED_ANONTMOUSLY }
        #  - { path: ^/app/profile, roles: IS_AUTHENTICATED_FULLY }

    # role_hierarchy:
        # ROLE_MANAGER: ROLE_ADHERENT
        # ROLE_ADMIN: ROLE_MANAGER

